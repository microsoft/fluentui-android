variables:
  - group: InfoSec-SecurityResults
  - name: tags
    value: production,externalfacing

jobs:
  - template: fluentui-android-compliance.yml

  - job: Build
    pool:
      vmImage: 'macos-latest'
    variables:
      - name: BUILDSECMON_OPT_IN
        value: true
    steps:
    - task: Bash@3
      displayName: 'Base64 decodes and pipes the GPG key content into the secret file'
      env:
        GPG_KEY_CONTENT: $(gpgContent)
        SIGNING_SECRET_KEY_RING_FILE: $(gpgSecretFilePath)
      inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
          sudo bash -c "echo '$GPG_KEY_CONTENT' | base64 -d > '$SIGNING_SECRET_KEY_RING_FILE'"
          ls
    - task: Gradle@2
      displayName: 'gradlew build'
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'assembleDevlopment'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '$(jdkVersion)'

    - task: Gradle@2
      displayName: Unit tests
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'assembleDevelopmentReleaseUnitTest'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '$(jdkVersion)'
        sonarQubeRunAnalysis: false
        spotBugsAnalysis: false

    - task: Gradle@2
      displayName: Generate testApk
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'assembleDevelopmentReleaseAndroidTest'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '$(jdkVersion)'
        sonarQubeRunAnalysis: false
        spotBugsAnalysis: false

    - task: Gradle@2
      displayName: Hydra Lab UI test
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'requestHydraLabTest -PappApkPath=$(build.sourcesdirectory)/FluentUI.Demo/build/outputs/apk/development/release/FluentUI.Demo-development-release.apk -PtestApkPath=$(build.sourcesdirectory)/FluentUI.Demo/build/outputs/apk/androidTest/development/release/FluentUI.Demo-development-release-androidTest.apk -PbuildFlavor=$(buildFlavor) -PtestSuiteName=$(testSuiteName) -PrunTimeOutSeconds=$(timeOutSeconds) -PdeviceIdentifier=$(deviceIdentifier) -PgroupTestType=$(groupTestType) -PreportAudience=TestLabOwner -PauthToken=$(authToken) -PpkgName=$(pkgName) -PtestPkgName=$(testPkgName) -PrunningType=$(runningType) -PframeworkType=$(frameworkType)'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '$(jdkVersion)'
        publishJUnitResults: false
    
    
    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(build.sourcesdirectory)'
        Contents: |
         **
        TargetFolder: '$(build.artifactstagingdirectory)'
    
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(build.artifactstagingdirectory)'
        artifact: 'Build'
        publishLocation: 'pipeline'

  - job: Dogfood
    pool:
      vmImage: 'macos-latest'
    variables:
      - name: BUILDSECMON_OPT_IN
        value: true
    steps:
    - task: Gradle@3
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'assembleDogfood'
        options: '-PappCenterSecret=$(appCenterSecret) -PsigningKeyPassword=$(signingKeyPassword) -PsigningKeyStorePassword=$(signingKeyStorePassword)'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        sonarQubeRunAnalysis: false
        spotBugsAnalysis: false
